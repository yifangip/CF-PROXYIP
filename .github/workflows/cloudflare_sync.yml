name: Filter & Cloudflare ProxyIP 同步

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: "0 6 * * *"      # 每天上午 6 点

jobs:
  filter_and_sync:
    runs-on: ubuntu-latest

    env:
      MAX_PER_COUNTRY: 3  # 默认每个国家最多保留条数
      CF_BASE_NAME: proxyip  # Cloudflare DNS 记录前缀
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}

    steps:
      # ---------------------------
      # 1️⃣ 检出仓库
      # ---------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # ---------------------------
      # 2️⃣ 设置 Python
      # ---------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # ---------------------------
      # 3️⃣ 安装依赖
      # ---------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # ---------------------------
      # 4️⃣ 运行筛选脚本 filter_443.py
      # ---------------------------
      - name: Run filter_443.py
        run: python filter_443.py

      # ---------------------------
      # 5️⃣ 删除旧日志文件，只保留最新一份
      # ---------------------------
      - name: Cleanup old logs
        run: |
          ls PROXYIP_*.txt || echo "No logs to clean"
          ls PROXYIP_*.txt | sort | head -n -1 | xargs -r rm -f

      # ---------------------------
      # 6️⃣ 运行 Cloudflare 同步脚本
      # ---------------------------
      - name: Run Cloudflare Sync
        run: python sync_proxy.py

      # ---------------------------
      # 7️⃣ 提交最新日志文件
      # ---------------------------
      - name: Commit latest log
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add PROXYIP_*.txt
          git commit -m "更新 Cloudflare 同步日志 [skip ci]" || echo "No changes to commit"
          git push origin HEAD

